// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Study.Training.Infrastructure.Data.Context;

namespace Study.Training.Infrastructure.Migrations
{
    [DbContext(typeof(TrainingDbContext))]
    partial class TrainingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("StudyTraining")
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Study.Training.Model.Entities.Concrete.Answer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AnswerId");

                    b.Property<bool>("IsCorrect")
                        .HasColumnName("IsCorrect");

                    b.Property<Guid?>("QuestionId");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnName("Text")
                        .HasMaxLength(200);

                    b.HasKey("Id")
                        .HasName("AnswerId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("Study.Training.Model.Entities.Concrete.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("QuestionId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("Description")
                        .HasMaxLength(200);

                    b.Property<Guid?>("SubjectId");

                    b.HasKey("Id")
                        .HasName("QuestionId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("Study.Training.Model.Entities.Concrete.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SubjectId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("Description")
                        .HasMaxLength(200);

                    b.Property<string>("Title");

                    b.HasKey("Id")
                        .HasName("SubjectId");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("Study.Training.Model.Entities.Concrete.Answer", b =>
                {
                    b.HasOne("Study.Training.Model.Entities.Concrete.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId");
                });

            modelBuilder.Entity("Study.Training.Model.Entities.Concrete.Question", b =>
                {
                    b.HasOne("Study.Training.Model.Entities.Concrete.Subject", "Subject")
                        .WithMany("Questions")
                        .HasForeignKey("SubjectId");
                });
#pragma warning restore 612, 618
        }
    }
}
